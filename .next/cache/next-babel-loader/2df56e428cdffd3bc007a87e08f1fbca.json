{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport Typer from \"../../components/Typer\";\nimport { connect } from 'react-redux';\nimport \"./index.scss\";\nconst content = `\n## 嗨。\n#### 我叫小寒，\n是这个网站的设计者和开发者。\n很开心你能来到了我的小站。\n网站的资源不多，但希望能给你带来一些帮助。\n博客的代码是开源的，这是这个项目的 [github地址]+(https://github.com/hanruto/dodo-blog)，记得给个star哦。\n看博客点 [这里]-(/) 。\n`;\n\nfunction Home(props) {\n  const isTyperFirstRendered = props.isTyperFirstRendered;\n  useEffect(() => {\n    if (!props.isTyperFirstRenderedRef) {\n      props.setIsTyperFirstRendered(true);\n    }\n  }, []);\n  return __jsx(\"div\", {\n    className: \"page-common-container home-page\"\n  }, __jsx(Typer, {\n    content: content,\n    rendered: isTyperFirstRendered\n  }));\n}\n\nconst mapState = state => _objectSpread({}, state.globalModel);\n\nconst mapDispatch = state => _objectSpread({}, state.globalModel);\n\nexport default connect(mapState, mapDispatch)(Home);","map":{"version":3,"sources":["/Users/qm/project/dodo-blog-v2/pages/home/index.tsx"],"names":["React","useEffect","Typer","connect","content","Home","props","isTyperFirstRendered","isTyperFirstRenderedRef","setIsTyperFirstRendered","mapState","state","globalModel","mapDispatch"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,KAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA;AAEA,MAAMC,OAAO,GAAI;;;;;;;;CAAjB;;AAUA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAMC,oBAAoB,GAAGD,KAAK,CAACC,oBAAnC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,KAAK,CAACE,uBAAX,EAAoC;AAClCF,MAAAA,KAAK,CAACG,uBAAN,CAA8B,IAA9B;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAEL,OAAhB;AAAyB,IAAA,QAAQ,EAAEG;AAAnC,IADF,CADF;AAKD;;AAED,MAAMG,QAAQ,GAAGC,KAAK,sBAAUA,KAAK,CAACC,WAAhB,CAAtB;;AAEA,MAAMC,WAAW,GAAGF,KAAK,sBAAUA,KAAK,CAACC,WAAhB,CAAzB;;AAEA,eAAeT,OAAO,CAACO,QAAD,EAAWG,WAAX,CAAP,CAA+BR,IAA/B,CAAf","sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport Typer from '../../components/Typer'\nimport { connect } from 'react-redux'\nimport './index.scss'\n\nconst content = `\n## 嗨。\n#### 我叫小寒，\n是这个网站的设计者和开发者。\n很开心你能来到了我的小站。\n网站的资源不多，但希望能给你带来一些帮助。\n博客的代码是开源的，这是这个项目的 [github地址]+(https://github.com/hanruto/dodo-blog)，记得给个star哦。\n看博客点 [这里]-(/) 。\n`\n\nfunction Home(props) {\n  const isTyperFirstRendered = props.isTyperFirstRendered\n\n  useEffect(() => {\n    if (!props.isTyperFirstRenderedRef) {\n      props.setIsTyperFirstRendered(true)\n    }\n  }, [])\n\n  return (\n    <div className=\"page-common-container home-page\">\n      <Typer content={content} rendered={isTyperFirstRendered} />\n    </div>\n  )\n}\n\nconst mapState = state => ({ ...state.globalModel })\n\nconst mapDispatch = state => ({ ...state.globalModel })\n\nexport default connect(mapState, mapDispatch)(Home)\n"]},"metadata":{},"sourceType":"module"}