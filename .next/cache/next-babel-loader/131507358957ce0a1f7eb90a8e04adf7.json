{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport Link from 'next/link';\nimport dayjs from 'dayjs';\nimport { connect } from 'react-redux';\nimport Logo from \"../../components/Logo\";\nimport AnimateQueue from \"../../components/AnimateQueue\";\nimport ScrollDetect from \"../../components/ScrollDetect\";\nimport LoadingText from \"../../components/LoadingText\";\nimport store from \"../../store\";\nimport \"./index.scss\";\nconst PAGE_SIZE = 15;\n\nconst sortBlog = blogArr => {\n  const list = [];\n  let currentGroupCreated = '';\n  blogArr.forEach(item => {\n    const created = dayjs(item.created).format('YYYY / MM');\n\n    if (created !== currentGroupCreated) {\n      currentGroupCreated = created;\n      list.push({\n        title: created,\n        type: 'date',\n        id: created\n      });\n    }\n\n    list.push({\n      title: item.title,\n      type: 'blog',\n      id: item._id\n    });\n  });\n  return list;\n};\n\nconst BlogItem = props => {\n  const {\n    info: blog,\n    style\n  } = props;\n  return blog.type === 'date' ? __jsx(\"div\", {\n    className: \"blog-date\",\n    style: style\n  }, blog.title) : __jsx(\"div\", {\n    className: \"blog-item\",\n    style: style\n  }, __jsx(Link, {\n    href: `/blog?id=${blog.id}`\n  }, __jsx(\"a\", {\n    className: \"page-common-blog-title\"\n  }, blog.title)));\n};\n\nfunction BlogListPage(props) {\n  const {\n    initBlogList,\n    blogList,\n    getBlogList,\n    renderedBlogListNumber,\n    setRenderedBlogListNumber\n  } = props;\n  const {\n    0: showNum,\n    1: setShowNum\n  } = useState(renderedBlogListNumber || PAGE_SIZE);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const showNumRef = useRef(0);\n  useEffect(() => {\n    !initBlogList && getBlogList();\n    return () => setRenderedBlogListNumber(showNumRef.current);\n  }, []);\n  const list = sortBlog((initBlogList || blogList).list);\n  const isLoadAll = list.length && showNum >= list.length;\n\n  const handleLoadMore = () => {\n    if (isLoadAll) return;\n    const currentShowNum = showNum + PAGE_SIZE;\n    showNumRef.current = currentShowNum;\n    setShowNum(currentShowNum);\n    setLoading(true);\n  };\n\n  const handleAnimateEnd = () => {\n    setLoading(false);\n  };\n\n  return __jsx(\"div\", {\n    className: \"blog-list-page page-common-container\"\n  }, __jsx(Logo, null), __jsx(ScrollDetect, {\n    onScrollOut: handleLoadMore,\n    protectTime: 500\n  }, list.slice(0, renderedBlogListNumber).map(item => {\n    return __jsx(BlogItem, {\n      key: item.id,\n      info: item\n    });\n  }), __jsx(AnimateQueue, {\n    animate: true,\n    interval: 100,\n    from: {\n      transform: 'translateX(100px)',\n      opacity: 0\n    },\n    to: {\n      transform: 'translateX(0px)',\n      opacity: 1\n    },\n    onAnimateEnd: handleAnimateEnd\n  }, list.slice(renderedBlogListNumber, showNum).map(item => {\n    return __jsx(BlogItem, {\n      key: item.id,\n      info: item\n    });\n  })), __jsx(\"div\", {\n    className: \"blog-list-info\"\n  }, isLoadAll ? '已全部加载' : loading && __jsx(LoadingText, null))));\n}\n\nBlogListPage.getInitialProps = async () => {\n  const {\n    getBlogList\n  } = store.dispatch.blogModel;\n  const initBlogList = await getBlogList();\n  return {\n    initBlogList\n  };\n};\n\nconst mapState = state => _objectSpread({}, state.blogModel, {}, state.globalModel);\n\nconst mapDispatch = state => _objectSpread({}, state.blogModel, {}, state.globalModel);\n\nexport default connect(mapState, mapDispatch)(BlogListPage);","map":{"version":3,"sources":["/Users/qm/project/dodo-blog-v2/pages/index/index.tsx"],"names":["React","useEffect","useState","useRef","Link","dayjs","connect","Logo","AnimateQueue","ScrollDetect","LoadingText","store","PAGE_SIZE","sortBlog","blogArr","list","currentGroupCreated","forEach","item","created","format","push","title","type","id","_id","BlogItem","props","info","blog","style","BlogListPage","initBlogList","blogList","getBlogList","renderedBlogListNumber","setRenderedBlogListNumber","showNum","setShowNum","loading","setLoading","showNumRef","current","isLoadAll","length","handleLoadMore","currentShowNum","handleAnimateEnd","slice","map","transform","opacity","getInitialProps","dispatch","blogModel","mapState","state","globalModel","mapDispatch"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,OAAOC,KAAP;AACA;AAEA,MAAMC,SAAS,GAAG,EAAlB;;AAIA,MAAMC,QAAQ,GAAIC,OAAD,IAA8D;AAC7E,QAAMC,IAAoB,GAAG,EAA7B;AAEA,MAAIC,mBAAmB,GAAG,EAA1B;AAEAF,EAAAA,OAAO,CAACG,OAAR,CAAgBC,IAAI,IAAI;AACtB,UAAMC,OAAO,GAAGd,KAAK,CAACa,IAAI,CAACC,OAAN,CAAL,CAAoBC,MAApB,CAA2B,WAA3B,CAAhB;;AAEA,QAAID,OAAO,KAAKH,mBAAhB,EAAqC;AACnCA,MAAAA,mBAAmB,GAAGG,OAAtB;AACAJ,MAAAA,IAAI,CAACM,IAAL,CAAU;AAAEC,QAAAA,KAAK,EAAEH,OAAT;AAAkBI,QAAAA,IAAI,EAAE,MAAxB;AAAgCC,QAAAA,EAAE,EAAEL;AAApC,OAAV;AACD;;AAEDJ,IAAAA,IAAI,CAACM,IAAL,CAAU;AAAEC,MAAAA,KAAK,EAAEJ,IAAI,CAACI,KAAd;AAAqBC,MAAAA,IAAI,EAAE,MAA3B;AAAmCC,MAAAA,EAAE,EAAEN,IAAI,CAACO;AAA5C,KAAV;AACD,GATD;AAWA,SAAOV,IAAP;AACD,CAjBD;;AAmBA,MAAMW,QAAQ,GAAIC,KAAD,IAGX;AACJ,QAAM;AAAEC,IAAAA,IAAI,EAAEC,IAAR;AAAcC,IAAAA;AAAd,MAAwBH,KAA9B;AAEA,SAAOE,IAAI,CAACN,IAAL,KAAc,MAAd,GACL;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAEO;AAAlC,KACGD,IAAI,CAACP,KADR,CADK,GAKL;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAEQ;AAAlC,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,YAAWD,IAAI,CAACL,EAAG;AAAhC,KACE;AAAG,IAAA,SAAS,EAAC;AAAb,KAAuCK,IAAI,CAACP,KAA5C,CADF,CADF,CALF;AAWD,CAjBD;;AAmBA,SAASS,YAAT,CAAsBJ,KAAtB,EAA6B;AAC3B,QAAM;AACJK,IAAAA,YADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,sBAJI;AAKJC,IAAAA;AALI,MAMFT,KANJ;AAQA,QAAM;AAAA,OAACU,OAAD;AAAA,OAAUC;AAAV,MAAwBpC,QAAQ,CAACiC,sBAAsB,IAAIvB,SAA3B,CAAtC;AACA,QAAM;AAAA,OAAC2B,OAAD;AAAA,OAAUC;AAAV,MAAwBtC,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMuC,UAAU,GAAGtC,MAAM,CAAC,CAAD,CAAzB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC+B,YAAD,IAAiBE,WAAW,EAA5B;AAEA,WAAO,MAAME,yBAAyB,CAACK,UAAU,CAACC,OAAZ,CAAtC;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAM3B,IAAI,GAAGF,QAAQ,CAAC,CAACmB,YAAY,IAAIC,QAAjB,EAA2BlB,IAA5B,CAArB;AACA,QAAM4B,SAAS,GAAG5B,IAAI,CAAC6B,MAAL,IAAeP,OAAO,IAAItB,IAAI,CAAC6B,MAAjD;;AAEA,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAIF,SAAJ,EAAe;AAEf,UAAMG,cAAc,GAAGT,OAAO,GAAGzB,SAAjC;AACA6B,IAAAA,UAAU,CAACC,OAAX,GAAqBI,cAArB;AAEAR,IAAAA,UAAU,CAACQ,cAAD,CAAV;AACAN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GARD;;AAUA,QAAMO,gBAAgB,GAAG,MAAM;AAC7BP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,IAAD,OADF,EAGE,MAAC,YAAD;AAAc,IAAA,WAAW,EAAEK,cAA3B;AAA2C,IAAA,WAAW,EAAE;AAAxD,KACG9B,IAAI,CAACiC,KAAL,CAAW,CAAX,EAAcb,sBAAd,EAAsCc,GAAtC,CAA0C/B,IAAI,IAAI;AACjD,WAAO,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACM,EAApB;AAAwB,MAAA,IAAI,EAAEN;AAA9B,MAAP;AACD,GAFA,CADH,EAKE,MAAC,YAAD;AACE,IAAA,OAAO,EAAE,IADX;AAEE,IAAA,QAAQ,EAAE,GAFZ;AAGE,IAAA,IAAI,EAAE;AAAEgC,MAAAA,SAAS,EAAE,mBAAb;AAAkCC,MAAAA,OAAO,EAAE;AAA3C,KAHR;AAIE,IAAA,EAAE,EAAE;AAAED,MAAAA,SAAS,EAAE,iBAAb;AAAgCC,MAAAA,OAAO,EAAE;AAAzC,KAJN;AAKE,IAAA,YAAY,EAAEJ;AALhB,KAOGhC,IAAI,CAACiC,KAAL,CAAWb,sBAAX,EAAmCE,OAAnC,EAA4CY,GAA5C,CAAgD/B,IAAI,IAAI;AACvD,WAAO,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACM,EAApB;AAAwB,MAAA,IAAI,EAAEN;AAA9B,MAAP;AACD,GAFA,CAPH,CALF,EAiBE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGyB,SAAS,GAAG,OAAH,GAAaJ,OAAO,IAAI,MAAC,WAAD,OADpC,CAjBF,CAHF,CADF;AA2BD;;AAEDR,YAAY,CAACqB,eAAb,GAA+B,YAAY;AACzC,QAAM;AAAElB,IAAAA;AAAF,MAAkBvB,KAAK,CAAC0C,QAAN,CAAeC,SAAvC;AACA,QAAMtB,YAAY,GAAG,MAAME,WAAW,EAAtC;AAEA,SAAO;AAAEF,IAAAA;AAAF,GAAP;AACD,CALD;;AAOA,MAAMuB,QAAQ,GAAGC,KAAK,sBAAUA,KAAK,CAACF,SAAhB,MAA8BE,KAAK,CAACC,WAApC,CAAtB;;AAEA,MAAMC,WAAW,GAAGF,KAAK,sBAAUA,KAAK,CAACF,SAAhB,MAA8BE,KAAK,CAACC,WAApC,CAAzB;;AAEA,eAAenD,OAAO,CAACiD,QAAD,EAAWG,WAAX,CAAP,CAA+B3B,YAA/B,CAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport Link from 'next/link'\nimport dayjs from 'dayjs'\nimport { connect } from 'react-redux'\nimport Logo from '../../components/Logo'\nimport AnimateQueue from '../../components/AnimateQueue'\nimport ScrollDetect from '../../components/ScrollDetect'\nimport LoadingText from '../../components/LoadingText'\nimport store from '../../store'\nimport './index.scss'\n\nconst PAGE_SIZE = 15\n\ntype BlogItemType = { type: 'date' | 'blog'; title: string; id: string }\n\nconst sortBlog = (blogArr: { created: Date; title: string; _id: string }[]) => {\n  const list: BlogItemType[] = []\n\n  let currentGroupCreated = ''\n\n  blogArr.forEach(item => {\n    const created = dayjs(item.created).format('YYYY / MM')\n\n    if (created !== currentGroupCreated) {\n      currentGroupCreated = created\n      list.push({ title: created, type: 'date', id: created })\n    }\n\n    list.push({ title: item.title, type: 'blog', id: item._id })\n  })\n\n  return list\n}\n\nconst BlogItem = (props: {\n  info: BlogItemType\n  style?: React.CSSProperties\n}) => {\n  const { info: blog, style } = props\n\n  return blog.type === 'date' ? (\n    <div className=\"blog-date\" style={style}>\n      {blog.title}\n    </div>\n  ) : (\n    <div className=\"blog-item\" style={style}>\n      <Link href={`/blog?id=${blog.id}`}>\n        <a className=\"page-common-blog-title\">{blog.title}</a>\n      </Link>\n    </div>\n  )\n}\n\nfunction BlogListPage(props) {\n  const {\n    initBlogList,\n    blogList,\n    getBlogList,\n    renderedBlogListNumber,\n    setRenderedBlogListNumber,\n  } = props\n\n  const [showNum, setShowNum] = useState(renderedBlogListNumber || PAGE_SIZE)\n  const [loading, setLoading] = useState(false)\n  const showNumRef = useRef(0)\n\n  useEffect(() => {\n    !initBlogList && getBlogList()\n\n    return () => setRenderedBlogListNumber(showNumRef.current)\n  }, [])\n\n  const list = sortBlog((initBlogList || blogList).list)\n  const isLoadAll = list.length && showNum >= list.length\n\n  const handleLoadMore = () => {\n    if (isLoadAll) return\n\n    const currentShowNum = showNum + PAGE_SIZE\n    showNumRef.current = currentShowNum\n\n    setShowNum(currentShowNum)\n    setLoading(true)\n  }\n\n  const handleAnimateEnd = () => {\n    setLoading(false)\n  }\n\n  return (\n    <div className=\"blog-list-page page-common-container\">\n      <Logo />\n\n      <ScrollDetect onScrollOut={handleLoadMore} protectTime={500}>\n        {list.slice(0, renderedBlogListNumber).map(item => {\n          return <BlogItem key={item.id} info={item} />\n        })}\n\n        <AnimateQueue\n          animate={true}\n          interval={100}\n          from={{ transform: 'translateX(100px)', opacity: 0 }}\n          to={{ transform: 'translateX(0px)', opacity: 1 }}\n          onAnimateEnd={handleAnimateEnd}\n        >\n          {list.slice(renderedBlogListNumber, showNum).map(item => {\n            return <BlogItem key={item.id} info={item} />\n          })}\n        </AnimateQueue>\n\n        <div className=\"blog-list-info\">\n          {isLoadAll ? '已全部加载' : loading && <LoadingText />}\n        </div>\n      </ScrollDetect>\n    </div>\n  )\n}\n\nBlogListPage.getInitialProps = async () => {\n  const { getBlogList } = store.dispatch.blogModel\n  const initBlogList = await getBlogList()\n\n  return { initBlogList }\n}\n\nconst mapState = state => ({ ...state.blogModel, ...state.globalModel })\n\nconst mapDispatch = state => ({ ...state.blogModel, ...state.globalModel })\n\nexport default connect(mapState, mapDispatch)(BlogListPage)\n"]},"metadata":{},"sourceType":"module"}