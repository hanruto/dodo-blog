{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport Link from 'next/link';\nimport dayjs from 'dayjs';\nimport { connect } from 'react-redux';\nimport Logo from \"../../components/Logo\";\nimport AnimateQueue from \"../../components/AnimateQueue\";\nimport ScrollDetect from \"../../components/ScrollDetect\";\nimport LoadingText from \"../../components/LoadingText\";\nimport store from \"../../store\";\nimport \"./index.scss\";\nvar PAGE_SIZE = 15;\n\nvar sortBlog = function sortBlog(blogArr) {\n  var list = [];\n  var currentGroupCreated = '';\n  blogArr.forEach(function (item) {\n    var created = dayjs(item.created).format('YYYY / MM');\n\n    if (created !== currentGroupCreated) {\n      currentGroupCreated = created;\n      list.push({\n        title: created,\n        type: 'date',\n        id: created\n      });\n    }\n\n    list.push({\n      title: item.title,\n      type: 'blog',\n      id: item._id\n    });\n  });\n  return list;\n};\n\nvar BlogItem = function BlogItem(props) {\n  var blog = props.info,\n      style = props.style;\n  return blog.type === 'date' ? __jsx(\"div\", {\n    className: \"blog-date\",\n    style: style\n  }, blog.title) : __jsx(\"div\", {\n    className: \"blog-item\",\n    style: style\n  }, __jsx(Link, {\n    href: \"/blog?id=\".concat(blog.id)\n  }, __jsx(\"a\", {\n    className: \"page-common-blog-title\"\n  }, blog.title)));\n};\n\nfunction BlogListPage(props) {\n  var initBlogList = props.initBlogList,\n      blogList = props.blogList,\n      getBlogList = props.getBlogList,\n      renderedBlogListNumber = props.renderedBlogListNumber,\n      setRenderedBlogListNumber = props.setRenderedBlogListNumber;\n\n  var _useState = useState(renderedBlogListNumber || PAGE_SIZE),\n      showNum = _useState[0],\n      setShowNum = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var showNumRef = useRef(0);\n  useEffect(function () {\n    !initBlogList && getBlogList();\n    return function () {\n      return setRenderedBlogListNumber(showNumRef.current);\n    };\n  }, []);\n  var list = sortBlog((initBlogList || blogList).list);\n  var isLoadAll = list.length && showNum >= list.length;\n\n  var handleLoadMore = function handleLoadMore() {\n    if (isLoadAll) return;\n    var currentShowNum = showNum + PAGE_SIZE;\n    showNumRef.current = currentShowNum;\n    setShowNum(currentShowNum);\n    setLoading(true);\n  };\n\n  var handleAnimateEnd = function handleAnimateEnd() {\n    setLoading(false);\n  };\n\n  return __jsx(\"div\", {\n    className: \"blog-list-page page-common-container\"\n  }, __jsx(Logo, null), __jsx(ScrollDetect, {\n    onScrollOut: handleLoadMore,\n    protectTime: 500\n  }, list.slice(0, renderedBlogListNumber).map(function (item) {\n    return __jsx(BlogItem, {\n      key: item.id,\n      info: item\n    });\n  }), __jsx(AnimateQueue, {\n    animate: true,\n    interval: 100,\n    from: {\n      transform: 'translateX(100px)',\n      opacity: 0\n    },\n    to: {\n      transform: 'translateX(0px)',\n      opacity: 1\n    },\n    onAnimateEnd: handleAnimateEnd\n  }, list.slice(renderedBlogListNumber, showNum).map(function (item) {\n    return __jsx(BlogItem, {\n      key: item.id,\n      info: item\n    });\n  })), __jsx(\"div\", {\n    className: \"blog-list-info\"\n  }, isLoadAll ? '已全部加载' : loading && __jsx(LoadingText, null))));\n}\n\nBlogListPage.getInitialProps = function _callee() {\n  var getBlogList, initBlogList;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          getBlogList = store.dispatch.blogModel.getBlogList;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getBlogList());\n\n        case 3:\n          initBlogList = _context.sent;\n          return _context.abrupt(\"return\", {\n            initBlogList: initBlogList\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nvar mapState = function mapState(state) {\n  return _objectSpread({}, state.blogModel, {}, state.globalModel);\n};\n\nvar mapDispatch = function mapDispatch(state) {\n  return _objectSpread({}, state.blogModel, {}, state.globalModel);\n};\n\nexport default connect(mapState, mapDispatch)(BlogListPage);","map":null,"metadata":{},"sourceType":"module"}