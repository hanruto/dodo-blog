{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://www.dodoblog.cn/api';\naxios.defaults.withCredentials = true;\naxios.interceptors.response.use(function (response) {\n  // 特殊repsonse，包括值类型的response和已经经过axois处理的response\n  if (typeof response === 'string' || typeof response === 'number' || typeof response === 'boolean' || response['hasAxiosPassport'] === true) {\n    return _Promise.resolve(response);\n  } // repsonse 处理，只剩data返回给前段\n\n\n  if (!response) {\n    return _Promise.reject('no response');\n  }\n\n  if (response.status !== 200) {\n    console.error('------ server error -------');\n    return _Promise.reject(response);\n  }\n\n  var result = response.data;\n\n  if (!result.success) {\n    console.error('------ operation error -------');\n    return _Promise.reject(result);\n  }\n\n  if (result.data && result.data instanceof Object) {\n    result.data['hasAxiosPassport'] = true;\n  }\n\n  return _Promise.resolve(result.data);\n});\naxios.interceptors.request.use(function (config) {\n  if (true) {\n    var jwt = localStorage.getItem('user-jwt');\n    if (jwt) config.headers['Authorization'] = jwt;\n  }\n\n  return config;\n}, function (error) {\n  return _Promise.reject(error);\n});\nexport default axios;","map":{"version":3,"sources":["/Users/qm/project/dodo-blog-v2/configs/axios.ts"],"names":["axios","defaults","baseURL","withCredentials","interceptors","response","use","resolve","reject","status","console","error","result","data","success","Object","request","config","jwt","localStorage","getItem","headers"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,6BAAzB;AACAF,KAAK,CAACC,QAAN,CAAeE,eAAf,GAAiC,IAAjC;AAEAH,KAAK,CAACI,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,UAAAD,QAAQ,EAAI;AAC1C;AACA,MACE,OAAOA,QAAP,KAAoB,QAApB,IACA,OAAOA,QAAP,KAAoB,QADpB,IAEA,OAAOA,QAAP,KAAoB,SAFpB,IAGAA,QAAQ,CAAC,kBAAD,CAAR,KAAiC,IAJnC,EAKE;AACA,WAAO,SAAQE,OAAR,CAAgBF,QAAhB,CAAP;AACD,GATyC,CAW1C;;;AACA,MAAI,CAACA,QAAL,EAAe;AACb,WAAO,SAAQG,MAAR,CAAe,aAAf,CAAP;AACD;;AAED,MAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,IAAAA,OAAO,CAACC,KAAR,CAAc,6BAAd;AACA,WAAO,SAAQH,MAAR,CAAeH,QAAf,CAAP;AACD;;AAED,MAAMO,MAAM,GAAGP,QAAQ,CAACQ,IAAxB;;AAEA,MAAI,CAACD,MAAM,CAACE,OAAZ,EAAqB;AACnBJ,IAAAA,OAAO,CAACC,KAAR,CAAc,gCAAd;AACA,WAAO,SAAQH,MAAR,CAAeI,MAAf,CAAP;AACD;;AAED,MAAIA,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACC,IAAP,YAAuBE,MAA1C,EAAkD;AAChDH,IAAAA,MAAM,CAACC,IAAP,CAAY,kBAAZ,IAAkC,IAAlC;AACD;;AAED,SAAO,SAAQN,OAAR,CAAgBK,MAAM,CAACC,IAAvB,CAAP;AACD,CAjCD;AAmCAb,KAAK,CAACI,YAAN,CAAmBY,OAAnB,CAA2BV,GAA3B,CACE,UAAAW,MAAM,EAAI;AACR,YAAqB;AACnB,QAAMC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAZ;AACA,QAAIF,GAAJ,EAASD,MAAM,CAACI,OAAP,CAAe,eAAf,IAAkCH,GAAlC;AACV;;AAED,SAAOD,MAAP;AACD,CARH,EASE,UAAAN,KAAK,EAAI;AACP,SAAO,SAAQH,MAAR,CAAeG,KAAf,CAAP;AACD,CAXH;AAcA,eAAeX,KAAf","sourcesContent":["import axios from 'axios'\n\naxios.defaults.baseURL = 'https://www.dodoblog.cn/api'\naxios.defaults.withCredentials = true\n\naxios.interceptors.response.use(response => {\n  // 特殊repsonse，包括值类型的response和已经经过axois处理的response\n  if (\n    typeof response === 'string' ||\n    typeof response === 'number' ||\n    typeof response === 'boolean' ||\n    response['hasAxiosPassport'] === true\n  ) {\n    return Promise.resolve(response)\n  }\n\n  // repsonse 处理，只剩data返回给前段\n  if (!response) {\n    return Promise.reject('no response')\n  }\n\n  if (response.status !== 200) {\n    console.error('------ server error -------')\n    return Promise.reject(response)\n  }\n\n  const result = response.data\n\n  if (!result.success) {\n    console.error('------ operation error -------')\n    return Promise.reject(result)\n  }\n\n  if (result.data && result.data instanceof Object) {\n    result.data['hasAxiosPassport'] = true\n  }\n\n  return Promise.resolve(result.data)\n})\n\naxios.interceptors.request.use(\n  config => {\n    if (process.browser) {\n      const jwt = localStorage.getItem('user-jwt')\n      if (jwt) config.headers['Authorization'] = jwt\n    }\n\n    return config\n  },\n  error => {\n    return Promise.reject(error)\n  }\n)\n\nexport default axios\n"]},"metadata":{},"sourceType":"module"}