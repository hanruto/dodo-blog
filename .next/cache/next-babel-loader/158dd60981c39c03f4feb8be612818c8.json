{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nexport default class ScrollDetect extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"el\", React.createRef());\n\n    _defineProperty(this, \"taskTimer\", 0);\n\n    _defineProperty(this, \"sleeping\", false);\n\n    _defineProperty(this, \"handleDetect\", () => {\n      if (this.sleeping) return false;\n      const {\n        protectTime = 1000,\n        onScrollOut\n      } = this.props;\n      const {\n        bottom\n      } = this.el.current && this.el.current.getBoundingClientRect();\n\n      if (bottom < window.innerHeight + 100) {\n        this.sleeping = true;\n        this.taskTimer = window.setTimeout(() => {\n          this.sleeping = false;\n          onScrollOut();\n          this.handleDetect();\n        }, protectTime);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.handleDetect();\n    window.addEventListener('scroll', this.handleDetect);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleDetect);\n    clearTimeout(this.taskTimer);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.detect !== this.props.detect) {\n      this.props.detect ? window.addEventListener('scroll', this.handleDetect) : window.removeEventListener('scroll', this.handleDetect);\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"ze-scroll-detect\",\n      ref: this.el\n    }, this.props.children);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}