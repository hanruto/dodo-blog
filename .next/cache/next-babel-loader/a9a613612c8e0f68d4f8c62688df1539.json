{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport qs from 'qs';\nexport default {\n  state: {\n    blogList: {\n      list: [],\n      count: 0,\n      page: 1,\n      perPage: 30\n    },\n    currentBlog: {}\n  },\n  reducers: {\n    setBlogList: function setBlogList(state, blogList) {\n      return _objectSpread({}, state, {\n        blogList: blogList\n      });\n    },\n    setBlog: function setBlog(state, currentBlog) {\n      return _objectSpread({}, state, {\n        currentBlog: currentBlog\n      });\n    }\n  },\n  effects: function effects(dispatch) {\n    return {\n      getBlogList: function getBlogList(options) {\n        var params, blogs;\n        return _regeneratorRuntime.async(function getBlogList$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = options || {\n                  perPage: 200,\n                  page: 1,\n                  tags: []\n                };\n\n                _Object$assign(params, {\n                  type: 1\n                });\n\n                _context.next = 4;\n                return _regeneratorRuntime.awrap(axios.get('/articles', {\n                  params: params,\n                  paramsSerializer: function paramsSerializer(params) {\n                    return qs.stringify(params, {\n                      arrayFormat: 'repeat'\n                    });\n                  }\n                }));\n\n              case 4:\n                blogs = _context.sent;\n                dispatch.blogModel.setBlogList(blogs);\n                return _context.abrupt(\"return\", blogs);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        });\n      },\n      getBlog: function getBlog(id) {\n        var currentBlog;\n        return _regeneratorRuntime.async(function getBlog$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regeneratorRuntime.awrap(axios.get(\"/articles/\".concat(id)));\n\n              case 2:\n                currentBlog = _context2.sent;\n                dispatch.blogModel.setBlog(currentBlog);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        });\n      }\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module"}