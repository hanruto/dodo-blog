{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nexport default class ScrollDetect extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"el\", React.createRef());\n\n    _defineProperty(this, \"taskTimer\", 0);\n\n    _defineProperty(this, \"sleeping\", false);\n\n    _defineProperty(this, \"handleDetect\", () => {\n      if (this.sleeping) return false;\n      const {\n        protectTime = 1000,\n        onScrollOut\n      } = this.props;\n      const {\n        bottom\n      } = this.el.current && this.el.current.getBoundingClientRect();\n\n      if (bottom < window.innerHeight + 100) {\n        this.sleeping = true;\n        this.taskTimer = window.setTimeout(() => {\n          this.sleeping = false;\n          onScrollOut();\n          this.handleDetect();\n        }, protectTime);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.handleDetect();\n    window.addEventListener('scroll', this.handleDetect);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleDetect);\n    clearTimeout(this.taskTimer);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.detect !== this.props.detect) {\n      this.props.detect ? window.addEventListener('scroll', this.handleDetect) : window.removeEventListener('scroll', this.handleDetect);\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"ze-scroll-detect\",\n      ref: this.el\n    }, this.props.children);\n  }\n\n}","map":{"version":3,"sources":["/Users/qm/project/dodo-blog-v2/components/ScrollDetect/index.tsx"],"names":["React","ScrollDetect","Component","createRef","sleeping","protectTime","onScrollOut","props","bottom","el","current","getBoundingClientRect","window","innerHeight","taskTimer","setTimeout","handleDetect","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","clearTimeout","componentDidUpdate","prevProps","detect","render","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAQA,eAAe,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAAkD;AAAA;AAAA;;AAAA,gCAC1DF,KAAK,CAACG,SAAN,EAD0D;;AAAA,uCAGnD,CAHmD;;AAAA,sCAIpD,KAJoD;;AAAA,0CAwBhD,MAAM;AACnB,UAAI,KAAKC,QAAT,EAAmB,OAAO,KAAP;AACnB,YAAM;AAAEC,QAAAA,WAAW,GAAG,IAAhB;AAAsBC,QAAAA;AAAtB,UAAsC,KAAKC,KAAjD;AACA,YAAM;AAAEC,QAAAA;AAAF,UACJ,KAAKC,EAAL,CAAQC,OAAR,IAAmB,KAAKD,EAAL,CAAQC,OAAR,CAAgBC,qBAAhB,EADrB;;AAGA,UAAIH,MAAM,GAAGI,MAAM,CAACC,WAAP,GAAqB,GAAlC,EAAuC;AACrC,aAAKT,QAAL,GAAgB,IAAhB;AACA,aAAKU,SAAL,GAAiBF,MAAM,CAACG,UAAP,CAAkB,MAAM;AACvC,eAAKX,QAAL,GAAgB,KAAhB;AACAE,UAAAA,WAAW;AACX,eAAKU,YAAL;AACD,SAJgB,EAIdX,WAJc,CAAjB;AAKD;AACF,KAtC8D;AAAA;;AAM/DY,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,YAAL;AACAJ,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkC,KAAKF,YAAvC;AACD;;AAEDG,EAAAA,oBAAoB,GAAG;AACrBP,IAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqC,KAAKJ,YAA1C;AACAK,IAAAA,YAAY,CAAC,KAAKP,SAAN,CAAZ;AACD;;AAEDQ,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACC,MAAV,KAAqB,KAAKjB,KAAL,CAAWiB,MAApC,EAA4C;AAC1C,WAAKjB,KAAL,CAAWiB,MAAX,GACIZ,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkC,KAAKF,YAAvC,CADJ,GAEIJ,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqC,KAAKJ,YAA1C,CAFJ;AAGD;AACF;;AAkBDS,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,GAAG,EAAE,KAAKhB;AAA5C,OACG,KAAKF,KAAL,CAAWmB,QADd,CADF;AAKD;;AA9C8D","sourcesContent":["import React from 'react'\n\ninterface Props {\n  detect?: boolean\n  protectTime?: number\n  onScrollOut?: Function\n}\n\nexport default class ScrollDetect extends React.Component<Props> {\n  el = React.createRef<HTMLDivElement>()\n\n  taskTimer = 0\n  sleeping = false\n\n  componentDidMount() {\n    this.handleDetect()\n    window.addEventListener('scroll', this.handleDetect)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleDetect)\n    clearTimeout(this.taskTimer)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.detect !== this.props.detect) {\n      this.props.detect\n        ? window.addEventListener('scroll', this.handleDetect)\n        : window.removeEventListener('scroll', this.handleDetect)\n    }\n  }\n\n  handleDetect = () => {\n    if (this.sleeping) return false\n    const { protectTime = 1000, onScrollOut } = this.props\n    const { bottom } =\n      this.el.current && this.el.current.getBoundingClientRect()\n\n    if (bottom < window.innerHeight + 100) {\n      this.sleeping = true\n      this.taskTimer = window.setTimeout(() => {\n        this.sleeping = false\n        onScrollOut()\n        this.handleDetect()\n      }, protectTime)\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"ze-scroll-detect\" ref={this.el}>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}