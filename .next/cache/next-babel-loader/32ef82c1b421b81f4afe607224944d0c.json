{"ast":null,"code":"import _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nexport default function LoadingText() {\n  var _useState = useState(0),\n      dotNumber = _useState[0],\n      setDotNumber = _useState[1];\n\n  var dots = _Array$from({\n    length: dotNumber\n  }).map(function () {\n    return '.';\n  }).join('');\n\n  useEffect(function () {\n    var dotNumber = 0;\n    var timer = setInterval(function () {\n      dotNumber = dotNumber + 1 <= 6 ? dotNumber + 1 : 1;\n      setDotNumber(dotNumber);\n    }, 200);\n    return function () {\n      return clearInterval(timer);\n    };\n  }, []);\n  return __jsx(React.Fragment, null, \"`\\u52A0\\u8F7D\\u4E2D$\", dots, \"`\");\n}","map":{"version":3,"sources":["/Users/qm/project/dodo-blog-v2/components/LoadingText/index.tsx"],"names":["useState","useEffect","LoadingText","dotNumber","setDotNumber","dots","length","map","join","timer","setInterval","clearInterval"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA,kBACFF,QAAQ,CAAC,CAAD,CADN;AAAA,MAC7BG,SAD6B;AAAA,MAClBC,YADkB;;AAGpC,MAAMC,IAAI,GAAG,YAAW;AAAEC,IAAAA,MAAM,EAAEH;AAAV,GAAX,EACVI,GADU,CACN;AAAA,WAAM,GAAN;AAAA,GADM,EAEVC,IAFU,CAEL,EAFK,CAAb;;AAIAP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIE,SAAS,GAAG,CAAhB;AAEA,QAAMM,KAAK,GAAGC,WAAW,CAAC,YAAM;AAC9BP,MAAAA,SAAS,GAAGA,SAAS,GAAG,CAAZ,IAAiB,CAAjB,GAAqBA,SAAS,GAAG,CAAjC,GAAqC,CAAjD;AACAC,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,KAHwB,EAGtB,GAHsB,CAAzB;AAKA,WAAO;AAAA,aAAMQ,aAAa,CAACF,KAAD,CAAnB;AAAA,KAAP;AACD,GATQ,EASN,EATM,CAAT;AAWA,SAAO,oDAAQJ,IAAR,MAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react'\n\nexport default function LoadingText() {\n  const [dotNumber, setDotNumber] = useState(0)\n\n  const dots = Array.from({ length: dotNumber })\n    .map(() => '.')\n    .join('')\n\n  useEffect(() => {\n    let dotNumber = 0\n\n    const timer = setInterval(() => {\n      dotNumber = dotNumber + 1 <= 6 ? dotNumber + 1 : 1\n      setDotNumber(dotNumber)\n    }, 200)\n\n    return () => clearInterval(timer)\n  }, [])\n\n  return <>`加载中${dots}`</>\n}\n"]},"metadata":{},"sourceType":"module"}