{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getLetters } from \"../../utils/string-tools\";\nimport \"./index.scss\";\nexport default function Typer(props) {\n  var content = props.content,\n      rendered = props.rendered;\n  var containerRef = useRef(null);\n  var timer = 0;\n\n  var handleType = function handleType() {\n    var container, letters, timeMap, currentLine, currentHref, _loop, i;\n\n    return _regeneratorRuntime.async(function handleType$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            container = containerRef.current;\n\n            if (container) {\n              _context2.next = 3;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 3:\n            letters = getLetters(content);\n            timeMap = {\n              h1: 200,\n              h2: 120,\n              h3: 100,\n              h4: 100,\n              p: 60\n            }; // const timeMap = { h1: 10, h2: 10, h3: 10, h4: 10, p: 10 }\n\n            currentLine = null;\n            currentHref = null;\n\n            _loop = function _loop(i) {\n              var _letters$i, type, content, isStart, isEnd, isHrefStart, isHrefEnd, href, isNewTarget, ms;\n\n              return _regeneratorRuntime.async(function _loop$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _letters$i = letters[i], type = _letters$i.type, content = _letters$i.content, isStart = _letters$i.isStart, isEnd = _letters$i.isEnd, isHrefStart = _letters$i.isHrefStart, isHrefEnd = _letters$i.isHrefEnd, href = _letters$i.href, isNewTarget = _letters$i.isNewTarget;\n                      ms = timeMap[type];\n\n                      if (rendered) {\n                        _context.next = 5;\n                        break;\n                      }\n\n                      _context.next = 5;\n                      return _regeneratorRuntime.awrap(new _Promise(function (resolve) {\n                        return timer = window.setTimeout(resolve, ms);\n                      }));\n\n                    case 5:\n                      if (isStart) {\n                        currentLine = document.createElement(type);\n                        container.appendChild(currentLine);\n                      }\n\n                      if (isHrefStart) {\n                        currentHref = document.createElement('a');\n\n                        if (isNewTarget) {\n                          currentHref.setAttribute('href', href);\n                          currentHref.setAttribute('target', '_new');\n                        } else {\n                          currentHref.setAttribute('data-href', href);\n                        }\n\n                        currentLine.appendChild(currentHref);\n                      }\n\n                      if (currentHref) {\n                        currentHref.innerHTML += content;\n                      } else {\n                        currentLine.innerHTML += content;\n                      }\n\n                      if (isHrefEnd) {\n                        currentHref = null;\n                      }\n\n                      if (!(!rendered && isEnd)) {\n                        _context.next = 12;\n                        break;\n                      }\n\n                      _context.next = 12;\n                      return _regeneratorRuntime.awrap(new _Promise(function (resolve) {\n                        return timer = window.setTimeout(resolve, ms);\n                      }));\n\n                    case 12:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              });\n            };\n\n            i = 0;\n\n          case 9:\n            if (!(i < letters.length)) {\n              _context2.next = 15;\n              break;\n            }\n\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(_loop(i));\n\n          case 12:\n            i++;\n            _context2.next = 9;\n            break;\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  var handleArchorJump = function handleArchorJump(e) {\n    // @ts-ignore\n    var dataHref = e.target && e.target.getAttribute('data-href');\n\n    if (dataHref) {\n      e.stopPropagation();\n      Router.push(dataHref);\n    }\n  };\n\n  useEffect(function () {\n    handleType();\n    document.addEventListener('click', handleArchorJump);\n    return function () {\n      clearInterval(timer);\n      document.removeEventListener('click', handleArchorJump);\n    };\n  }, []);\n  return __jsx(\"div\", {\n    className: \"c-typer\",\n    ref: containerRef\n  });\n}","map":{"version":3,"sources":["/Users/qm/project/dodo-blog-v2/components/Typer/index.tsx"],"names":["React","useRef","useEffect","Router","getLetters","Typer","props","content","rendered","containerRef","timer","handleType","container","current","letters","timeMap","h1","h2","h3","h4","p","currentLine","currentHref","i","type","isStart","isEnd","isHrefStart","isHrefEnd","href","isNewTarget","ms","resolve","window","setTimeout","document","createElement","appendChild","setAttribute","innerHTML","length","handleArchorJump","e","dataHref","target","getAttribute","stopPropagation","push","addEventListener","clearInterval","removeEventListener"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport Router from 'next/router'\nimport { getLetters } from '../../utils/string-tools'\nimport './index.scss'\n\ninterface Props {\n  content: string\n  rendered?: boolean\n}\n\nexport default function Typer(props: Props) {\n  const { content, rendered } = props\n  const containerRef = useRef<HTMLDivElement>(null)\n\n  let timer = 0\n\n  const handleType = async () => {\n    const container = containerRef.current\n\n    if (!container) return\n\n    const letters = getLetters(content)\n    const timeMap = { h1: 200, h2: 120, h3: 100, h4: 100, p: 60 }\n    // const timeMap = { h1: 10, h2: 10, h3: 10, h4: 10, p: 10 }\n    let currentLine: HTMLElement | null = null\n    let currentHref: HTMLAnchorElement | null = null\n\n    for (let i = 0; i < letters.length; i++) {\n      const {\n        type,\n        content,\n        isStart,\n        isEnd,\n        isHrefStart,\n        isHrefEnd,\n        href,\n        isNewTarget,\n      } = letters[i]\n      const ms = timeMap[type]\n\n      if (!rendered) {\n        await new Promise(resolve => (timer = window.setTimeout(resolve, ms)))\n      }\n\n      if (isStart) {\n        currentLine = document.createElement(type)\n        container.appendChild(currentLine)\n      }\n\n      if (isHrefStart) {\n        currentHref = document.createElement('a')\n        if (isNewTarget) {\n          currentHref.setAttribute('href', href)\n          currentHref.setAttribute('target', '_new')\n        } else {\n          currentHref.setAttribute('data-href', href)\n        }\n\n        currentLine!.appendChild(currentHref)\n      }\n\n      if (currentHref) {\n        currentHref.innerHTML += content\n      } else {\n        currentLine!.innerHTML += content\n      }\n\n      if (isHrefEnd) {\n        currentHref = null\n      }\n\n      if (!rendered && isEnd) {\n        await new Promise(resolve => (timer = window.setTimeout(resolve, ms)))\n      }\n    }\n  }\n\n  const handleArchorJump = e => {\n    // @ts-ignore\n    const dataHref = e.target && e.target.getAttribute('data-href')\n\n    if (dataHref) {\n      e.stopPropagation()\n      Router.push(dataHref)\n    }\n  }\n\n  useEffect(() => {\n    handleType()\n    document.addEventListener('click', handleArchorJump)\n\n    return () => {\n      clearInterval(timer)\n      document.removeEventListener('click', handleArchorJump)\n    }\n  }, [])\n\n  return <div className=\"c-typer\" ref={containerRef}></div>\n}\n"]},"metadata":{},"sourceType":"module"}