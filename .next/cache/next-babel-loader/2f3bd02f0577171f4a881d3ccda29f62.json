{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getLetters } from \"../../utils/string-tools\";\nimport \"./index.scss\";\nexport default function Typer(props) {\n  const {\n    content,\n    rendered\n  } = props;\n  const containerRef = useRef(null);\n  let timer = 0;\n\n  const handleType = async () => {\n    const container = containerRef.current;\n    if (!container) return;\n    const letters = getLetters(content);\n    const timeMap = {\n      h1: 200,\n      h2: 120,\n      h3: 100,\n      h4: 100,\n      p: 60\n    }; // const timeMap = { h1: 10, h2: 10, h3: 10, h4: 10, p: 10 }\n\n    let currentLine = null;\n    let currentHref = null;\n\n    for (let i = 0; i < letters.length; i++) {\n      const {\n        type,\n        content,\n        isStart,\n        isEnd,\n        isHrefStart,\n        isHrefEnd,\n        href,\n        isNewTarget\n      } = letters[i];\n      const ms = timeMap[type];\n\n      if (!rendered) {\n        await new _Promise(resolve => timer = window.setTimeout(resolve, ms));\n      }\n\n      if (isStart) {\n        currentLine = document.createElement(type);\n        container.appendChild(currentLine);\n      }\n\n      if (isHrefStart) {\n        currentHref = document.createElement('a');\n\n        if (isNewTarget) {\n          currentHref.setAttribute('href', href);\n          currentHref.setAttribute('target', '_new');\n        } else {\n          currentHref.setAttribute('data-href', href);\n        }\n\n        currentLine.appendChild(currentHref);\n      }\n\n      if (currentHref) {\n        currentHref.innerHTML += content;\n      } else {\n        currentLine.innerHTML += content;\n      }\n\n      if (isHrefEnd) {\n        currentHref = null;\n      }\n\n      if (!rendered && isEnd) {\n        await new _Promise(resolve => timer = window.setTimeout(resolve, ms));\n      }\n    }\n  };\n\n  const handleArchorJump = e => {\n    // @ts-ignore\n    const dataHref = e.target && e.target.getAttribute('data-href');\n\n    if (dataHref) {\n      e.stopPropagation();\n      Router.push(dataHref);\n    }\n  };\n\n  useEffect(() => {\n    handleType();\n    document.addEventListener('click', handleArchorJump);\n    return () => {\n      clearInterval(timer);\n      document.removeEventListener('click', handleArchorJump);\n    };\n  }, []);\n  return __jsx(\"div\", {\n    className: \"c-typer\",\n    ref: containerRef\n  });\n}","map":{"version":3,"sources":["/Users/qm/project/dodo-blog-v2/components/Typer/index.tsx"],"names":["React","useRef","useEffect","Router","getLetters","Typer","props","content","rendered","containerRef","timer","handleType","container","current","letters","timeMap","h1","h2","h3","h4","p","currentLine","currentHref","i","length","type","isStart","isEnd","isHrefStart","isHrefEnd","href","isNewTarget","ms","resolve","window","setTimeout","document","createElement","appendChild","setAttribute","innerHTML","handleArchorJump","e","dataHref","target","getAttribute","stopPropagation","push","addEventListener","clearInterval","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,UAAT;AACA;AAOA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAA6B;AAC1C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAwBF,KAA9B;AACA,QAAMG,YAAY,GAAGR,MAAM,CAAiB,IAAjB,CAA3B;AAEA,MAAIS,KAAK,GAAG,CAAZ;;AAEA,QAAMC,UAAU,GAAG,YAAY;AAC7B,UAAMC,SAAS,GAAGH,YAAY,CAACI,OAA/B;AAEA,QAAI,CAACD,SAAL,EAAgB;AAEhB,UAAME,OAAO,GAAGV,UAAU,CAACG,OAAD,CAA1B;AACA,UAAMQ,OAAO,GAAG;AAAEC,MAAAA,EAAE,EAAE,GAAN;AAAWC,MAAAA,EAAE,EAAE,GAAf;AAAoBC,MAAAA,EAAE,EAAE,GAAxB;AAA6BC,MAAAA,EAAE,EAAE,GAAjC;AAAsCC,MAAAA,CAAC,EAAE;AAAzC,KAAhB,CAN6B,CAO7B;;AACA,QAAIC,WAA+B,GAAG,IAAtC;AACA,QAAIC,WAAqC,GAAG,IAA5C;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,OAAO,CAACU,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,YAAM;AACJE,QAAAA,IADI;AAEJlB,QAAAA,OAFI;AAGJmB,QAAAA,OAHI;AAIJC,QAAAA,KAJI;AAKJC,QAAAA,WALI;AAMJC,QAAAA,SANI;AAOJC,QAAAA,IAPI;AAQJC,QAAAA;AARI,UASFjB,OAAO,CAACS,CAAD,CATX;AAUA,YAAMS,EAAE,GAAGjB,OAAO,CAACU,IAAD,CAAlB;;AAEA,UAAI,CAACjB,QAAL,EAAe;AACb,cAAM,aAAYyB,OAAO,IAAKvB,KAAK,GAAGwB,MAAM,CAACC,UAAP,CAAkBF,OAAlB,EAA2BD,EAA3B,CAAhC,CAAN;AACD;;AAED,UAAIN,OAAJ,EAAa;AACXL,QAAAA,WAAW,GAAGe,QAAQ,CAACC,aAAT,CAAuBZ,IAAvB,CAAd;AACAb,QAAAA,SAAS,CAAC0B,WAAV,CAAsBjB,WAAtB;AACD;;AAED,UAAIO,WAAJ,EAAiB;AACfN,QAAAA,WAAW,GAAGc,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAd;;AACA,YAAIN,WAAJ,EAAiB;AACfT,UAAAA,WAAW,CAACiB,YAAZ,CAAyB,MAAzB,EAAiCT,IAAjC;AACAR,UAAAA,WAAW,CAACiB,YAAZ,CAAyB,QAAzB,EAAmC,MAAnC;AACD,SAHD,MAGO;AACLjB,UAAAA,WAAW,CAACiB,YAAZ,CAAyB,WAAzB,EAAsCT,IAAtC;AACD;;AAEDT,QAAAA,WAAW,CAAEiB,WAAb,CAAyBhB,WAAzB;AACD;;AAED,UAAIA,WAAJ,EAAiB;AACfA,QAAAA,WAAW,CAACkB,SAAZ,IAAyBjC,OAAzB;AACD,OAFD,MAEO;AACLc,QAAAA,WAAW,CAAEmB,SAAb,IAA0BjC,OAA1B;AACD;;AAED,UAAIsB,SAAJ,EAAe;AACbP,QAAAA,WAAW,GAAG,IAAd;AACD;;AAED,UAAI,CAACd,QAAD,IAAamB,KAAjB,EAAwB;AACtB,cAAM,aAAYM,OAAO,IAAKvB,KAAK,GAAGwB,MAAM,CAACC,UAAP,CAAkBF,OAAlB,EAA2BD,EAA3B,CAAhC,CAAN;AACD;AACF;AACF,GA3DD;;AA6DA,QAAMS,gBAAgB,GAAGC,CAAC,IAAI;AAC5B;AACA,UAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,IAAYF,CAAC,CAACE,MAAF,CAASC,YAAT,CAAsB,WAAtB,CAA7B;;AAEA,QAAIF,QAAJ,EAAc;AACZD,MAAAA,CAAC,CAACI,eAAF;AACA3C,MAAAA,MAAM,CAAC4C,IAAP,CAAYJ,QAAZ;AACD;AACF,GARD;;AAUAzC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU;AACVyB,IAAAA,QAAQ,CAACY,gBAAT,CAA0B,OAA1B,EAAmCP,gBAAnC;AAEA,WAAO,MAAM;AACXQ,MAAAA,aAAa,CAACvC,KAAD,CAAb;AACA0B,MAAAA,QAAQ,CAACc,mBAAT,CAA6B,OAA7B,EAAsCT,gBAAtC;AACD,KAHD;AAID,GARQ,EAQN,EARM,CAAT;AAUA,SAAO;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,GAAG,EAAEhC;AAA9B,IAAP;AACD","sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport Router from 'next/router'\nimport { getLetters } from '../../utils/string-tools'\nimport './index.scss'\n\ninterface Props {\n  content: string\n  rendered?: boolean\n}\n\nexport default function Typer(props: Props) {\n  const { content, rendered } = props\n  const containerRef = useRef<HTMLDivElement>(null)\n\n  let timer = 0\n\n  const handleType = async () => {\n    const container = containerRef.current\n\n    if (!container) return\n\n    const letters = getLetters(content)\n    const timeMap = { h1: 200, h2: 120, h3: 100, h4: 100, p: 60 }\n    // const timeMap = { h1: 10, h2: 10, h3: 10, h4: 10, p: 10 }\n    let currentLine: HTMLElement | null = null\n    let currentHref: HTMLAnchorElement | null = null\n\n    for (let i = 0; i < letters.length; i++) {\n      const {\n        type,\n        content,\n        isStart,\n        isEnd,\n        isHrefStart,\n        isHrefEnd,\n        href,\n        isNewTarget,\n      } = letters[i]\n      const ms = timeMap[type]\n\n      if (!rendered) {\n        await new Promise(resolve => (timer = window.setTimeout(resolve, ms)))\n      }\n\n      if (isStart) {\n        currentLine = document.createElement(type)\n        container.appendChild(currentLine)\n      }\n\n      if (isHrefStart) {\n        currentHref = document.createElement('a')\n        if (isNewTarget) {\n          currentHref.setAttribute('href', href)\n          currentHref.setAttribute('target', '_new')\n        } else {\n          currentHref.setAttribute('data-href', href)\n        }\n\n        currentLine!.appendChild(currentHref)\n      }\n\n      if (currentHref) {\n        currentHref.innerHTML += content\n      } else {\n        currentLine!.innerHTML += content\n      }\n\n      if (isHrefEnd) {\n        currentHref = null\n      }\n\n      if (!rendered && isEnd) {\n        await new Promise(resolve => (timer = window.setTimeout(resolve, ms)))\n      }\n    }\n  }\n\n  const handleArchorJump = e => {\n    // @ts-ignore\n    const dataHref = e.target && e.target.getAttribute('data-href')\n\n    if (dataHref) {\n      e.stopPropagation()\n      Router.push(dataHref)\n    }\n  }\n\n  useEffect(() => {\n    handleType()\n    document.addEventListener('click', handleArchorJump)\n\n    return () => {\n      clearInterval(timer)\n      document.removeEventListener('click', handleArchorJump)\n    }\n  }, [])\n\n  return <div className=\"c-typer\" ref={containerRef}></div>\n}\n"]},"metadata":{},"sourceType":"module"}