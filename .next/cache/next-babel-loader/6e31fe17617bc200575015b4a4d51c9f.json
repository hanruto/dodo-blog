{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nconst defaultSpeed = 600;\nconst defaultInterval = 200;\nexport class Animate extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      animate: false\n    });\n\n    _defineProperty(this, \"timer\", 0);\n  }\n\n  componentDidMount() {\n    if (this.props.animate) {\n      this.timer = setTimeout(() => this.setState({\n        animate: true\n      }));\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.animate !== this.props.animate) {\n      this.timer = window.setTimeout(() => this.setState({\n        animate: this.props.animate\n      }));\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  render() {\n    const {\n      children,\n      speed = defaultSpeed,\n      from,\n      to\n    } = this.props;\n    const {\n      animate\n    } = this.state;\n    const additionAnimate = (animate ? to : from) || {};\n    return React.Children.map(children, item => React.cloneElement(item, {\n      style: _objectSpread({}, {\n        transform: `translateY(${animate ? 0 : 40}px)`,\n        transition: `all ease-in-out ${speed / 1000}s`,\n        opacity: animate ? 1 : 0\n      }, {}, additionAnimate)\n    }));\n  }\n\n}\nexport default class AnimateQueue extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"timer\", null);\n\n    _defineProperty(this, \"state\", {\n      current: 0\n    });\n\n    _defineProperty(this, \"handleAnimate\", animate => {\n      const {\n        interval = defaultInterval,\n        children,\n        exit,\n        onAnimateStart\n      } = this.props;\n      if (!children || !children.length) return false;\n      clearTimeout(this.timer);\n\n      if (exit) {\n        return this.setState({\n          current: 0\n        });\n      }\n\n      const loop = () => {\n        let current = this.state.current;\n        const max = children ? children.length : 0;\n\n        if (!animate && current <= 0) {\n          this.setState({\n            current: 0\n          });\n          this.props.onAnimateEnd && this.props.onAnimateEnd();\n          return false;\n        }\n\n        if (animate && current >= max) {\n          this.setState({\n            current: max\n          });\n          this.props.onAnimateEnd && this.props.onAnimateEnd();\n          return false;\n        }\n\n        current = current + (animate ? 1 : -1);\n        this.setState({\n          current\n        });\n        this.timer = setTimeout(loop, interval);\n      };\n\n      onAnimateStart && onAnimateStart();\n      this.timer = setTimeout(loop, interval);\n    });\n  }\n\n  componentDidMount() {\n    this.handleAnimate(this.props.animate);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!this.props.children || !prevProps.children) {\n      return null;\n    }\n\n    if (prevProps.exit !== this.props.exit) {\n      return this.handleAnimate(this.props.animate);\n    }\n\n    if (prevProps.animate !== this.props.animate) {\n      return this.handleAnimate(this.props.animate);\n    }\n\n    if (prevProps.children.length !== this.props.children.length) {\n      return this.handleAnimate(this.props.animate);\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      children,\n      speed = 400,\n      animate\n    } = _this$props,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"speed\", \"animate\"]);\n\n    const {\n      current\n    } = this.state;\n    if (!children) return null;\n    return React.Children.map(children, (item, index) => {\n      return __jsx(Animate, _extends({\n        animate: index < current,\n        speed: speed\n      }, rest), item);\n    });\n  }\n\n}\nexport class AnimateQueueGroup extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      current: 0\n    });\n\n    _defineProperty(this, \"animate\", this.props.animate);\n\n    _defineProperty(this, \"handleNextAnimate\", () => {\n      let {\n        current\n      } = this.state;\n      const {\n        children\n      } = this.props;\n      const max = children ? children.length : 0;\n\n      if (this.animate && current >= max) {\n        current = max;\n      } else if (!this.animate && current <= 0) {\n        current = 0;\n      } else {\n        this.animate ? current = current + 1 : current = current - 1;\n      }\n\n      this.setState({\n        current\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.handleNextAnimate();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.animate !== this.props.animate) {\n      this.animate = nextProps.animate;\n      this.handleNextAnimate();\n    }\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          {\n      children,\n      speed = 400,\n      animate\n    } = _this$props2,\n          rest = _objectWithoutProperties(_this$props2, [\"children\", \"speed\", \"animate\"]);\n\n    const {\n      current\n    } = this.state;\n    return React.Children.map(children, (item, index) => {\n      return __jsx(\"div\", {\n        className: \"ze-animate-group-wrapper\"\n      }, React.cloneElement(item, _objectSpread({\n        animate: index < current\n      }, rest, {\n        onAnimateEnd: this.handleNextAnimate\n      })));\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/qm/project/dodo-blog-v2/components/AnimateQueue/index.tsx"],"names":["React","defaultSpeed","defaultInterval","Animate","Component","animate","componentDidMount","props","timer","setTimeout","setState","componentDidUpdate","prevProps","window","componentWillUnmount","clearTimeout","render","children","speed","from","to","state","additionAnimate","Children","map","item","cloneElement","style","transform","transition","opacity","AnimateQueue","current","interval","exit","onAnimateStart","length","loop","max","onAnimateEnd","handleAnimate","rest","index","AnimateQueueGroup","handleNextAnimate","componentWillReceiveProps","nextProps"],"mappings":"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","sourcesContent":["import * as React from 'react'\n\nconst defaultSpeed = 600\nconst defaultInterval = 200\n\ninterface Props {\n  animate?: boolean\n  speed?: number\n  from?: React.CSSProperties\n  to?: React.CSSProperties\n  children?: any\n}\n\nexport class Animate extends React.Component<Props> {\n  state = {\n    animate: false,\n  }\n\n  timer = 0\n\n  componentDidMount() {\n    if (this.props.animate) {\n      this.timer = setTimeout(() => this.setState({ animate: true }))\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.animate !== this.props.animate) {\n      this.timer = window.setTimeout(() =>\n        this.setState({ animate: this.props.animate })\n      )\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer)\n  }\n\n  render() {\n    const { children, speed = defaultSpeed, from, to } = this.props\n    const { animate } = this.state\n    const additionAnimate = (animate ? to : from) || {}\n\n    return React.Children.map(children, item =>\n      React.cloneElement(item, {\n        style: {\n          ...{\n            transform: `translateY(${animate ? 0 : 40}px)`,\n            transition: `all ease-in-out ${speed / 1000}s`,\n            opacity: animate ? 1 : 0,\n          },\n          ...additionAnimate,\n        },\n      })\n    )\n  }\n}\n\ninterface QueueProps {\n  exit?: boolean\n  interval?: number\n  children: React.ReactElement[]\n  onAnimateEnd?: Function\n  onAnimateStart?: Function\n}\n\nexport default class AnimateQueue extends React.Component<Props & QueueProps> {\n  timer = null\n\n  state = {\n    current: 0,\n  }\n\n  componentDidMount() {\n    this.handleAnimate(this.props.animate)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!this.props.children || !prevProps.children) {\n      return null\n    }\n    if (prevProps.exit !== this.props.exit) {\n      return this.handleAnimate(this.props.animate)\n    }\n    if (prevProps.animate !== this.props.animate) {\n      return this.handleAnimate(this.props.animate)\n    }\n    if (prevProps.children.length !== this.props.children.length) {\n      return this.handleAnimate(this.props.animate)\n    }\n  }\n\n  handleAnimate = animate => {\n    const {\n      interval = defaultInterval,\n      children,\n      exit,\n      onAnimateStart,\n    } = this.props\n\n    if (!children || !children.length) return false\n\n    clearTimeout(this.timer)\n\n    if (exit) {\n      return this.setState({ current: 0 })\n    }\n\n    const loop = () => {\n      let current = this.state.current\n      const max = children ? children.length : 0\n      if (!animate && current <= 0) {\n        this.setState({ current: 0 })\n        this.props.onAnimateEnd && this.props.onAnimateEnd()\n        return false\n      }\n\n      if (animate && current >= max) {\n        this.setState({ current: max })\n        this.props.onAnimateEnd && this.props.onAnimateEnd()\n        return false\n      }\n\n      current = current + (animate ? 1 : -1)\n\n      this.setState({ current })\n      this.timer = setTimeout(loop, interval)\n    }\n\n    onAnimateStart && onAnimateStart()\n\n    this.timer = setTimeout(loop, interval)\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer)\n  }\n\n  render() {\n    const { children, speed = 400, animate, ...rest } = this.props\n    const { current } = this.state\n\n    if (!children) return null\n\n    return React.Children.map(children, (item, index) => {\n      return (\n        <Animate animate={index < current} speed={speed} {...rest}>\n          {item}\n        </Animate>\n      )\n    })\n  }\n}\n\nexport class AnimateQueueGroup extends React.Component<Props & QueueProps> {\n  state = {\n    current: 0,\n  }\n\n  animate = this.props.animate\n\n  componentDidMount() {\n    this.handleNextAnimate()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.animate !== this.props.animate) {\n      this.animate = nextProps.animate\n      this.handleNextAnimate()\n    }\n  }\n\n  handleNextAnimate = () => {\n    let { current } = this.state\n    const { children } = this.props\n    const max = children ? children.length : 0\n\n    if (this.animate && current >= max) {\n      current = max\n    } else if (!this.animate && current <= 0) {\n      current = 0\n    } else {\n      this.animate ? (current = current + 1) : (current = current - 1)\n    }\n\n    this.setState({ current })\n  }\n\n  render() {\n    const { children, speed = 400, animate, ...rest } = this.props\n    const { current } = this.state\n\n    return React.Children.map(children, (item, index) => {\n      return (\n        <div className=\"ze-animate-group-wrapper\">\n          {React.cloneElement(item, {\n            animate: index < current,\n            ...rest,\n            onAnimateEnd: this.handleNextAnimate,\n          })}\n        </div>\n      )\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}