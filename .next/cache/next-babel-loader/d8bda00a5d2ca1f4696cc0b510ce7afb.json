{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getLetters } from \"../../utils/string-tools\";\nimport \"./index.scss\";\nexport default function Typer(props) {\n  var content = props.content,\n      rendered = props.rendered;\n  var containerRef = useRef(null);\n  var timer = 0;\n\n  var handleType = function handleType() {\n    var container, letters, timeMap, currentLine, currentHref, _loop, i;\n\n    return _regeneratorRuntime.async(function handleType$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            container = containerRef.current;\n\n            if (container) {\n              _context2.next = 3;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 3:\n            letters = getLetters(content);\n            timeMap = {\n              h1: 200,\n              h2: 120,\n              h3: 100,\n              h4: 100,\n              p: 60\n            }; // const timeMap = { h1: 10, h2: 10, h3: 10, h4: 10, p: 10 }\n\n            currentLine = null;\n            currentHref = null;\n\n            _loop = function _loop(i) {\n              var _letters$i, type, content, isStart, isEnd, isHrefStart, isHrefEnd, href, isNewTarget, ms;\n\n              return _regeneratorRuntime.async(function _loop$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _letters$i = letters[i], type = _letters$i.type, content = _letters$i.content, isStart = _letters$i.isStart, isEnd = _letters$i.isEnd, isHrefStart = _letters$i.isHrefStart, isHrefEnd = _letters$i.isHrefEnd, href = _letters$i.href, isNewTarget = _letters$i.isNewTarget;\n                      ms = timeMap[type];\n\n                      if (rendered) {\n                        _context.next = 5;\n                        break;\n                      }\n\n                      _context.next = 5;\n                      return _regeneratorRuntime.awrap(new _Promise(function (resolve) {\n                        return timer = window.setTimeout(resolve, ms);\n                      }));\n\n                    case 5:\n                      if (isStart) {\n                        currentLine = document.createElement(type);\n                        container.appendChild(currentLine);\n                      }\n\n                      if (isHrefStart) {\n                        currentHref = document.createElement('a');\n\n                        if (isNewTarget) {\n                          currentHref.setAttribute('href', href);\n                          currentHref.setAttribute('target', '_new');\n                        } else {\n                          currentHref.setAttribute('data-href', href);\n                        }\n\n                        currentLine.appendChild(currentHref);\n                      }\n\n                      if (currentHref) {\n                        currentHref.innerHTML += content;\n                      } else {\n                        currentLine.innerHTML += content;\n                      }\n\n                      if (isHrefEnd) {\n                        currentHref = null;\n                      }\n\n                      if (!(!rendered && isEnd)) {\n                        _context.next = 12;\n                        break;\n                      }\n\n                      _context.next = 12;\n                      return _regeneratorRuntime.awrap(new _Promise(function (resolve) {\n                        return timer = window.setTimeout(resolve, ms);\n                      }));\n\n                    case 12:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              });\n            };\n\n            i = 0;\n\n          case 9:\n            if (!(i < letters.length)) {\n              _context2.next = 15;\n              break;\n            }\n\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(_loop(i));\n\n          case 12:\n            i++;\n            _context2.next = 9;\n            break;\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  var handleArchorJump = function handleArchorJump(e) {\n    // @ts-ignore\n    var dataHref = e.target && e.target.getAttribute('data-href');\n\n    if (dataHref) {\n      e.stopPropagation();\n      Router.push(dataHref);\n    }\n  };\n\n  useEffect(function () {\n    handleType();\n    document.addEventListener('click', handleArchorJump);\n    return function () {\n      clearInterval(timer);\n      document.removeEventListener('click', handleArchorJump);\n    };\n  }, []);\n  return __jsx(\"div\", {\n    className: \"c-typer\",\n    ref: containerRef\n  });\n}","map":null,"metadata":{},"sourceType":"module"}