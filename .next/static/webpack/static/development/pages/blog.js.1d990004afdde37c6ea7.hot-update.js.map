{"version":3,"file":"static/webpack/static/development/pages/blog.js.1d990004afdde37c6ea7.hot-update.js","sources":["webpack:///./store/blog-model.ts"],"sourcesContent":["import axios from 'axios'\nimport qs from 'qs'\n\ninterface GetBlogListProps {\n  perPage?: number\n  page?: number\n  tags?: string[]\n}\n\nexport default {\n  state: {\n    blogList: {\n      list: [],\n      count: 0,\n      page: 1,\n      perPage: 30,\n    },\n\n    currentBlog: {},\n\n    comments: { list: [], total: 0 },\n  },\n\n  reducers: {\n    setBlogList(state, blogList) {\n      return { ...state, blogList }\n    },\n\n    setBlog(state, currentBlog) {\n      return { ...state, currentBlog }\n    },\n\n    setComments(state, comments) {\n      return { ...state, comments }\n    },\n  },\n\n  effects: dispatch => ({\n    async getBlogList(options?: GetBlogListProps) {\n      const params = options || { perPage: 200, page: 1, tags: [] }\n\n      Object.assign(params, { type: 1 })\n\n      const blogs = await axios.get('/articles', {\n        params,\n        paramsSerializer: params => {\n          return qs.stringify(params, { arrayFormat: 'repeat' })\n        },\n      })\n\n      dispatch.blogModel.setBlogList(blogs)\n\n      return blogs\n    },\n\n    async getBlog(id) {\n      try {\n        const blog = await axios.get(`/articles/${id}`)\n        dispatch.blogModel.setBlog(blog)\n        return blog\n      } catch {\n        console.log('博客不存在')\n        return null\n      }\n    },\n\n    async commentBlog(info) {\n      await axios.post('/comments', info)\n      dispatch.blogModel.getComments({ blogId: info.blogId })\n    },\n\n    async leaveMessage(info) {\n      await axios.post('/comments', info)\n      dispatch.blogModel.getComments({ type: 2 })\n    },\n\n    async getComments(query) {\n      const comments = await axios.get('/comments', { params: query })\n      dispatch.blogModel.setComments(comments)\n    },\n  }),\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AAAA;AAAA;AAAA;AAVA;AAaA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAXA;AAcA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAAA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AACA;AAPA;AAMA;AAOA;AAbA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAoBA;AACA;AArBA;AACA;AADA;AAAA;AAAA;AAwBA;AAxBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AA+BA;AAAA;AAAA;AACA;AAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCA;AAlCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAoCA;AAAA;AAAA;AACA;AArCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuCA;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwCA;AAAA;AACA;AAzCA;AAwCA;AACA;AACA;AA1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BA;;;;A","sourceRoot":""}